<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Eh Bien Testez Maintenant !</title><link>https://eh-bien-testez-maintenant.github.io/</link><description>Vous codiez ? J'en suis fort aise.&lt;br/&gt; Eh bien : testez maintenant !</description><lastBuildDate>Mon, 29 Jul 2019 21:00:00 +0200</lastBuildDate><item><title>Livre : Les tests logiciels en Agile</title><link>https://eh-bien-testez-maintenant.github.io/2019/07/28/livre-les-tests-logiciels-en-agile/</link><description>&lt;img alt="Couverture du livre" class="align-center" src="https://eh-bien-testez-maintenant.github.io/images/2019-livre-les-tests-logiciels-en-agile.jpg" style="width: 250px;" /&gt;
&lt;div class="section" id="avis"&gt;
&lt;h2&gt;Avis&lt;/h2&gt;
&lt;p&gt;Il s'agit d'un ouvrage &amp;quot;collectif&amp;quot; publi√© par le &lt;a class="reference external" href="http://www.cftl.fr/cf-tl/a-propos-du-cftl/"&gt;CFTL&lt;/a&gt;.
Venant du CFTL, je m'attendais donc √† un ouvrage un peu &amp;quot;dogmatique&amp;quot; dans la lign√©e du livre
&amp;quot;&lt;a class="reference external" href="https://eh-bien-testez-maintenant.github.io/articles/2016/livre-les-tests-logiciels-fondamentaux.rst"&gt;Les tests logiciels fondamentaux&lt;/a&gt;&amp;quot;.
Ce n'est pas du tout le cas et c'est plut√¥t heureux. Le pragmatisme est de rigueur, √† mon avis, lorsqu'on aborde un tel
sujet o√π les pratiques sont tr√®s d√©pendantes du contexte. L'id√©e de compiler diff√©rents auteurs et
exp√©riences est vraiment int√©ressante. Associ√©e √† une mise en pages a√©r√©e et illustr√©e, la lecture est d'autant plus
agr√©able.&lt;/p&gt;
&lt;p&gt;Cette approche d'√©criture &amp;quot;collective&amp;quot; a aussi des inconv√©nients. En effet, l'ensemble m'est apparu un peu h√©t√©rog√®ne
par moment. J'ai trouv√© que certains chapitres √©taient aboutis et d'autres plus &amp;quot;l√©gers&amp;quot;, voire hors-sujet
(ie. traitant plus de techniques de Test que de Test en Agilit√©). Cependant, cela ne nuit pas globalement √† la lecture,
surtout si le sujet reste int√©ressant.&lt;/p&gt;
&lt;p&gt;Voici quelques citations, en vrac, qui ont retenu particuli√®rement mon attention :&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;quot;Les tests dans une m√©thode agile vont prendre plus d'importance que dans une m√©thode classique&amp;quot;
-- &lt;strong&gt;Marc Hage Chanine&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&amp;quot;Dans un projet Agile, le r√¥le du Test Manager se trouve dilu√©, incombant souvent au testeur lui-m√™me, qui prend
donc en charge une large partie de ses responsabilit√©s&amp;quot;&lt;/p&gt;
&lt;p&gt;&amp;quot;[L'ATDD] exige de tous les membres de l'√©quipe de sortir de leur zone de comp√©tence, voire d'int√©r√™t, pour
travailler sur des cas de test&amp;quot; -- &lt;strong&gt;Reynald Stevens&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&amp;quot;J'ai fait face √† plusieurs reprises √† [un] rejet quand les t√¢ches de tests √©taient attribu√©es √† une personne
non-incluse √† l'√©quipe QA&amp;quot; -- &lt;strong&gt;Marcelo Kamenetz Szwarcbarg, Amadeus&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&amp;quot;Les √©quipes sont focalis√©es sur les engagements op√©rationnels et il est toujours difficile de les mobiliser sur
les travaux d'am√©lioration continue&amp;quot; -- &lt;strong&gt;Collectif, Axa&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="section" id="conclusion"&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;J'ai trouv√© ce livre pertinent, car les exp√©riences relat√©es correspondent assez bien √† ce que j'ai vu dans les
entreprises pour lesquelles j'ai travaill√©. Je souligne en particulier le retour d'exp√©rience de l'√©quipe qui d√©veloppe
le site &amp;quot;oui.sncf&amp;quot; dans lequel je me retrouve en de nombreux points.&lt;/p&gt;
&lt;p&gt;Aux travers du regard des auteurs, j'ai appris et mieux compris certains aspects. J'ai notamment
r√©alis√© d'une mani√®re plus pr√©cise que &lt;strong&gt;le Test dans le contexte Agile, √©tait un levier important pour aligner
le &amp;quot;D√©veloppement&amp;quot; avec le &amp;quot;Business&amp;quot;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;C'est le premier livre publi√© en fran√ßais sur le sujet du &amp;quot;Test logiciel en Agilit√©&amp;quot; et, ne serait-ce qu'√† ce titre,
il m√©rite le d√©tour.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr class="docutils" /&gt;
&lt;div class="section" id="eme-de-couverture"&gt;
&lt;h2&gt;4√®me de couverture&lt;/h2&gt;
&lt;p&gt;Ce livre collectif r√©pond au besoin de partager des connaissances de la communaut√© francophone des tests logiciels.
Comment l‚ÄôAgilit√© s‚Äôint√®gre et modifie nos pratiques ? Quelles sont les nouvelles approches de tests,
les techniques et l‚Äôorganisation des activit√©s les plus pertinentes ? Quels sont les retours d‚Äôexp√©rience ?
Autant de questions auxquelles ce livre cherche √† r√©pondre, en fournissant de l‚Äôinformation actualis√©e par
des praticiens et en montrant la diversit√© des probl√©matiques et des solutions mises en ≈ìuvre.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="sommaire"&gt;
&lt;h2&gt;Sommaire&lt;/h2&gt;
&lt;p&gt;Le livre du CFTL ¬´ Les tests logiciels en Agile ¬ª est un ouvrage collectif, organis√© en trois parties :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Partie I ‚Äì Aspects sp√©cifiques des tests en Agile&lt;/dt&gt;
&lt;dd&gt;nous introduisons les aspects sp√©cifiques des tests dans l‚ÄôAgilit√© en termes d‚Äô√©tat d‚Äôesprit, de r√¥le des testeurs
et d‚Äôorganisation des √©quipes.&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Partie II ‚Äì Pratiques des tests en Agile&lt;/dt&gt;
&lt;dd&gt;nous offrons un catalogue de pratiques, couvrant √† la fois les techniques de test (ATDD/BDD, Automatisation,
Tests exploratoires, ‚Ä¶), la fa√ßon d‚Äôorganiser les tests (Agilit√© √† l‚Äô√©chelle ‚Äì SAFe, m√©triques, tests bas√©s sur
les risques, ‚Ä¶) mais aussi les contextes sp√©cifiques tels l‚ÄôIoT ou le test en production.&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Partie III ‚Äì Retours d‚Äôexp√©rience&lt;/dt&gt;
&lt;dd&gt;nous pr√©sentons des analyses pratiques des r√©ussites et des √©checs de terrain.&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">apallier</dc:creator><pubDate>Sun, 28 Jul 2019 23:40:00 +0200</pubDate><guid isPermaLink="false">tag:eh-bien-testez-maintenant.github.io,2019-07-28:/2019/07/28/livre-les-tests-logiciels-en-agile/</guid><category>livre</category><category>test logiciel</category><category>agile</category></item><item><title>Compilation de blogs fran√ßais sur le Test Logiciel</title><link>https://eh-bien-testez-maintenant.github.io/2018/10/14/blogs-francais-sur-test-logiciel/</link><description>&lt;img alt="Blogs en fran√ßais" class="align-center" src="https://eh-bien-testez-maintenant.github.io/images/2018-blogs.jpg" style="width: 400px;" /&gt;
&lt;p&gt;Il y a peu de blogs qui publient en fran√ßais sur le th√®me du Test Logiciel (ou alors je n'ai pas assez cherch√© üòÖ et
dans ce cas vous pouvez me le faire savoir dans les commentaires en bas).&lt;/p&gt;
&lt;p&gt;Je souhaite mettre en avant ces blogs car je trouve qu'en France le m√©tier de Testeur est trop m√©connu et que
parall√®lement √† cela, il y a peu de ressources et d'informations sur le Test Logiciel dans notre langue, l'un pouvant
d'ailleurs √™tre la cons√©quence de l'autre. Pourtant, quoi de mieux que de s'adresser √† quelqu'un dans sa langue
maternelle pour se faire connaitre ?&lt;/p&gt;
&lt;p&gt;Voici donc la liste de blogs fran√ßais sur le Test Logiciel que j'ai dans mon lecteur RSS :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.lyontesting.fr"&gt;Lyon Testing&lt;/a&gt; a commenc√© il y a deux ans √† peu pr√®s commme moi mais ils (3 testeurs) sont beaucoup plus prolifiques :) De plus ils font l'effort de la double traduction (fran√ßais et anglais). J'aime bien leur approche &lt;a class="reference external" href="http://context-driven-testing.com/"&gt;Context Driven&lt;/a&gt;. Leurs articles sont tr√®s int√©ressants. Bref, je ne peux que recommander !&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.lyontesting.fr"&gt;La Taverne du Testeur&lt;/a&gt; existe depuis un peu moins d'un an et est r√©dig√© par un collectif de testeurs. L'approche est plus &amp;quot;ISTQB&amp;quot;. Il y a beaucoup d'articles et ce que j'appr√©cie c'est leurs nombreux interviews que je compile d'ailleurs, entre autres, dans &lt;a class="reference external" href="https://eh-bien-testez-maintenant.github.io/pages/interviews_testers.rst"&gt;cette page&lt;/a&gt; :)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://blog.testwik.com"&gt;Testwik&lt;/a&gt;, √† lire aussi&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://parlonstest.wordpress.com/"&gt;Parlons Test&lt;/a&gt; par &lt;a class="reference external" href="https://twitter.com/StephDesby"&gt;&amp;#64;StephDesby&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://laurent.bristiel.com"&gt;Blog de Laurent Bristiel&lt;/a&gt;, souvent r√©dig√© dans la langue de Shakespeare mais pertinant, notamment pour ceux qui s'int√©ressent √† &lt;a class="reference external" href="https:\robotframework.org"&gt;Robot Framework&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.test-recette.fr/"&gt;Test et Recette&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://blog.univ-angers.fr/qsfs/"&gt;Blog de la formation QSF d'Angers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.qualifiez.fr/journaldutesteur/index.php?blog"&gt;Qualifiez&lt;/a&gt; ne semble malheureusement plus r√©diger d'articles depuis un certain temps&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Du cot√© des &amp;quot;entreprises&amp;quot; :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.hightest.nc/blog"&gt;Hightest&lt;/a&gt; est une soci√©t√© bas√©e en Nouvelle-Cal√©donie. Leur blog est sympa avec des articles quelquefois, comment dire ?, &lt;a class="reference external" href="https://www.hightest.nc/blog/posts/les-7-principes-generaux-du-test-en-illustrations"&gt;un peu &amp;quot;d√©cal√©s&amp;quot;&lt;/a&gt; üëç&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www2.stardust-testing.com/blog-fr"&gt;Blog de StarDust&lt;/a&gt;, entreprise qui travaille dans le Test et l'Assurance Qualit√©&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.all4test.fr/dossiers-thematiques/"&gt;Blog de All4Test&lt;/a&gt;, entreprise cr√©√©e en 2006, se pr√©sente comme un &amp;quot;pure player&amp;quot; dans le domaine du Test Logiciel&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://blog.testingdigital.com"&gt;Blog de Testing Digital&lt;/a&gt;, entreprise qui travaille dans le Test et la Qualit√© Logiciels sur Paris&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Voil√†, avec tous ces blogs dans votre liste, vous devriez avoir de quoi lire !&lt;/p&gt;
&lt;p&gt;Si vous en connaissez d'autres ou si le votre n'apparait pas sur votre liste : faites le moi savoir dans les
commentaires ci-dessous ‚¨áÔ∏è&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">apallier</dc:creator><pubDate>Sun, 14 Oct 2018 21:23:00 +0200</pubDate><guid isPermaLink="false">tag:eh-bien-testez-maintenant.github.io,2018-10-14:/2018/10/14/blogs-francais-sur-test-logiciel/</guid><category>blog</category><category>test logiciel</category></item><item><title>La strat√©gie de test de la "Terre ronde"</title><link>https://eh-bien-testez-maintenant.github.io/2018/09/16/strategie-test-terre-ronde/</link><description>&lt;img alt="La strat√©gie de la &amp;quot;Terre ronde&amp;quot;" class="align-center" src="https://eh-bien-testez-maintenant.github.io/images/2018-terre-globe.jpg" style="width: 400px;" /&gt;
&lt;!-- Photo by Suzy Hazelwood from Pexels --&gt;
&lt;p&gt;James Bach vient de publier (le 08/09/2018) sur son blog &lt;a class="reference external" href="http://www.satisfice.com/blog/archives/4947"&gt;un article&lt;/a&gt;  dans
lequel il explique l'analogie qu'il fait entre le forme sph√©rique de la Terre et le Test logiciel.&lt;/p&gt;
&lt;p&gt;Il a appel√© ce mod√®le la &lt;strong&gt;strat√©gie de test de la &amp;quot;Terre ronde&amp;quot;&lt;/strong&gt; et je vais tenter d'en expliquer les grandes lignes &lt;a class="footnote-reference" href="#f1" id="id1"&gt;[1]&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="qu-est-ce-que-la-strategie-de-test-de-la-terre-ronde"&gt;
&lt;h2&gt;Qu'est-ce que la strat√©gie de test de la &amp;quot;Terre ronde&amp;quot; ?&lt;/h2&gt;
&lt;div class="section" id="un-modele-pour-expliquer-le-test-logiciel"&gt;
&lt;h3&gt;Un mod√®le pour expliquer le Test logiciel&lt;/h3&gt;
&lt;p&gt;Avant de parler du mod√®le de la &amp;quot;Terre ronde&amp;quot;, nous allons parler d'un autre mod√®le similaire,
bien connu des testeurs : la &amp;quot;&lt;strong&gt;Pyramide du Test automatique&lt;/strong&gt;&amp;quot; &lt;a class="footnote-reference" href="#f2" id="id2"&gt;[2]&lt;/a&gt;&lt;/p&gt;
&lt;img alt="Pyramide du Test automatique" class="align-center" src="http://www.mountaingoatsoftware.com/uploads/blog/Testpyramid.jpg" style="width: 200px;" /&gt;
&lt;p&gt;Ce mod√®le part d'une pyramide - plut√¥t un triangle - d√©coup√©e en couches ou strates horizontales successives.
Chaque strate repr√©sente un niveau de test.
L'analogie est faite entre la forme √©vas√©e du triangle et la proportion de tests automatiques √† r√©aliser.
Dans les couches basses, il doit y avoir plus de tests que dans les hautes avec une diminution progressive,
d'o√π la forme triangulaire.&lt;/p&gt;
&lt;p&gt;Ce mod√®le permet d'expliquer un aspect du Test automatique par analogie avec une forme g√©om√©trique.&lt;/p&gt;
&lt;p&gt;C'est ce que fait James Bach en utilisant l'analogie de la &amp;quot;Terre ronde&amp;quot;. Il utilise la forme sph√©rique r√©partie
en couches concentriques de la Terre pour mod√©liser un aspect du Test logiciel :&lt;/p&gt;
&lt;a class="reference external image-reference" href="https://eh-bien-testez-maintenant.github.io/doc/strategie-test-terre-ronde.pdf"&gt;&lt;img alt="La strat√©gie de la &amp;quot;Terre ronde&amp;quot;" class="align-center" src="https://eh-bien-testez-maintenant.github.io/images/2018-strategie-test-terre-ronde.png" style="width: 800px;" /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;div class="section" id="un-modele-qui-montre-les-enjeux-du-test-a-differents-niveaux"&gt;
&lt;h3&gt;Un mod√®le qui montre les enjeux du test √† diff√©rents niveaux&lt;/h3&gt;
&lt;p&gt;L'id√©e derri√®re le mod√®le de la &amp;quot;Terre ronde&amp;quot; est de penser les technologies comme les &lt;strong&gt;couches terrestres concentriques&lt;/strong&gt;.
Chaque couche a un volume qui repr√©sente les possibilit√©s, c'est-√†-dire &lt;strong&gt;l'espace des √©tats possibles du produit √† tester&lt;/strong&gt;.
Ce volume tend donc √† augmenter de fa√ßon drastique √† chaque couche.
On imagine alors facilement les probl√©matiques de test qui en d√©coulent √† chaque niveau.&lt;/p&gt;
&lt;p&gt;En bas du mod√®le, au niveau du noyau terrestre, se trouvent les frameworks, les syst√®mes d'exploitation et les environnements de d√©veloppement, en d'autres termes,
tout ce qu'on ne va pas tester. Les d√©veloppements reposent sur cette &amp;quot;fondation solide&amp;quot; de suppositions.
Ces suppositions sont g√©n√©ralement s√ªres, bien que quelques fois de la lave ou du gaz radon ou une source souterraine toxique, peuvent traverser cette fondation.&lt;/p&gt;
&lt;p&gt;Si on monte d'un niveau, on arrive au code du produit que l'on peut tester de fa√ßon unitaire puisque nous en sommes les auteurs.
Ces tests sont typiquement √©crits par des d√©veloppeurs de mani√®re &amp;quot;souterraines&amp;quot; √† un niveau relativement bas.
Cependant, les utilisateurs eux vivent tout en haut, √† la lumi√®re. Les d√©veloppeurs peuvent donc avoir des difficult√©s √† adopter
le point de vue des utilisateurs car ils sont &amp;quot;emp√™tr√©s&amp;quot; dans les d√©tails de leur travail et biais√©s par leur haut-niveau d'expertise.&lt;/p&gt;
&lt;p&gt;En montant dans les couches, on arrive alors √† l'endroit o√π interagissent les sous-syst√®mes.
Ceux-ci peuvent typiquement √™tre test√©s via une API ou en ligne de commande.
C'est √† ce niveau que les outils de test excellent.
On peut d'ailleurs s'imaginer les outils de test comme des sous-marins √©voluant sous la temp√™te.&lt;/p&gt;
&lt;p&gt;Enfin, la surface de la Terre, lieu o√π peuvent s√©vir des intemp√©ries, il y a l'interface graphique (GUI).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="un-modele-qui-nous-rappelle-l-importance-des-donnees"&gt;
&lt;h3&gt;Un mod√®le qui nous rappelle l'importance des donn√©es&lt;/h3&gt;
&lt;p&gt;James Bach donne une importance particuli√®re aux donn√©es.
Il les repr√©sente comme les flux d'√©nergies qui agissent au dessus de la surface (le soleil, le vent, l'eau)
et en dessous (eaux souterraines, magma, tremblements de terre).
Lorsque l'on teste, les donn√©es sont partout, dans des bases, dans le cloud si on fait du micro-service.
Il y en a m√™me dans le code.
Enfin, les donn√©es sont bien s√ªr dans ce que les utilisateurs saisissent mais aussi dans la mani√®re dont ils manipulent le produit.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="un-modele-qui-nous-rappelle-l-importance-de-la-testabilite"&gt;
&lt;h3&gt;Un mod√®le qui nous rappelle l'importance de la testabilit√©&lt;/h3&gt;
&lt;p&gt;Un produit &amp;quot;testable&amp;quot; est un produit qui peut √™tre d√©compos√© en parties testables s√©par√©ment.
On doit √©galement pouvoir observer et contr√¥ler son comportement.
Cela signifie que les testeurs doivent avoir acc√®s √† des parties plus &amp;quot;internes&amp;quot; du logiciel via une interface (comme une ligne de commande ou une API),
et √† un syst√®me de journalisation (logging).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusion"&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Pour conclure son propos, James Bach finit par ces quelques remarques :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;La qualit√© apparente (√† la surface) n√©cessite de la qualit√© sous-jacente (en souterrain)&lt;/li&gt;
&lt;li&gt;La qualit√© apparente r√©duit la d√©pendance √† de co√ªteux tests de haut-niveau&lt;/li&gt;
&lt;li&gt;Les tests de bas-niveau, peu co√ªteux, r√©duisent la d√©pendance √† de co√ªteux tests de haut-niveau&lt;/li&gt;
&lt;li&gt;Le risque augmente jusqu'√† l'utilisateur&lt;/li&gt;
&lt;/ul&gt;
&lt;hr class="docutils" /&gt;
&lt;p class="rubric"&gt;Notes&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="f1" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Cet article n'est pas une traduction mot pour mot de l'article de James Bach mais plut√¥t un r√©sum√© librement interpr√©t√©, en fran√ßais
mais qui, je l'esp√®re, reste assez fid√®le √† l'original. Merci √† James Bach pour ce travail.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="f2" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id2"&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;p class="first"&gt;Quelques r√©f√©rences sur la &amp;quot;Pyramide du Test Automatique&amp;quot; :&lt;/p&gt;
&lt;ul class="last simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://watirmelon.blog/testing-pyramids/"&gt;https://watirmelon.blog/testing-pyramids/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://martinfowler.com/bliki/TestPyramid.html"&gt;https://martinfowler.com/bliki/TestPyramid.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.mountaingoatsoftware.com/blog/the-forgotten-layer-of-the-test-automation-pyramid"&gt;https://www.mountaingoatsoftware.com/blog/the-forgotten-layer-of-the-test-automation-pyramid&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">apallier</dc:creator><pubDate>Sun, 16 Sep 2018 18:00:00 +0200</pubDate><guid isPermaLink="false">tag:eh-bien-testez-maintenant.github.io,2018-09-16:/2018/09/16/strategie-test-terre-ronde/</guid><category>strategie</category><category>test logiciel</category></item><item><title>Test automatique : la Flakiness</title><link>https://eh-bien-testez-maintenant.github.io/2018/09/02/test-automatique-flakiness/</link><description>&lt;img alt="Test automatique : la Flakiness" class="align-center" src="https://eh-bien-testez-maintenant.github.io/images/2018-test-automatique-flakiness.jpg" style="width: 300px;" /&gt;
&lt;div class="section" id="qu-est-ce-que-la-flakiness"&gt;
&lt;h2&gt;Qu'est-ce que la flakiness ?&lt;/h2&gt;
&lt;p&gt;Il existe un ph√©nom√®ne peut-√™tre m√©connu ou bien sous-estim√© lorsque l'on fait du Test automatique : la &amp;quot;&lt;strong&gt;flakiness&lt;/strong&gt;&amp;quot;.&lt;/p&gt;
&lt;p&gt;Google d√©finit le terme &amp;quot;&lt;em&gt;flaky&lt;/em&gt;&amp;quot; de la fa√ßon suivante &lt;a class="footnote-reference" href="#f1" id="id1"&gt;[1]&lt;/a&gt; :&lt;/p&gt;
&lt;blockquote&gt;
Un r√©sultat de test est &amp;quot;&lt;em&gt;flaky&lt;/em&gt;&amp;quot; lorsque le test peut √† la fois passer et √™tre un √©chec sur le m√™me code&lt;/blockquote&gt;
&lt;p&gt;La &lt;em&gt;flakiness&lt;/em&gt; est donc ce qui caract√©rise des tests qui peuvent passer ou √™tre en √©chec entre deux ex√©cutions exactement identiques
(m√™mes logiciels, versions, environements...). On a donc des r√©sultats contradictoires sur deux campagnes de test identiques.
Il devient alors difficile de se faire un avis pr√©cis de l'√©tat du logiciel test√©. On ne peut plus distinguer les &amp;quot;vrais&amp;quot; bugs
des &amp;quot;&lt;em&gt;flaky&lt;/em&gt;&amp;quot; tests.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="quand-la-rencontre-t-on"&gt;
&lt;h2&gt;Quand la rencontre-t'on ?&lt;/h2&gt;
&lt;p&gt;Ce ph√©nom√®ne est une &lt;em&gt;constante lorsqu'on fait du Test automatique&lt;/em&gt; &lt;a class="footnote-reference" href="#f2" id="id2"&gt;[2]&lt;/a&gt;. C'est un peu comme les infections nosocomiales,
on ne peut pas vraiment y √©chapper, il faut faire avec, tout en essayant de la mitiger au maximum.&lt;/p&gt;
&lt;p&gt;Elle a tendance √† augmenter avec le niveau de test. Par exemple, on peut en avoir un peu en tests unitaires, plus en int√©gration et encore
beaucoup plus en test d'acceptance via l'interface graphique.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="pourquoi"&gt;
&lt;h2&gt;Pourquoi ?&lt;/h2&gt;
&lt;p&gt;Malheureusement, les causes de la &lt;em&gt;flakiness&lt;/em&gt; sont nombreuses.&lt;/p&gt;
&lt;p&gt;P√™le-m√™le, on peut citer :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Les environnements de test instables / non maitris√©s. Un bon exemple : le r√©seau&lt;/li&gt;
&lt;li&gt;Les donn√©es de test (Test Data) non maitris√©es. Exemple : donn√©es d'entr√©e al√©atoires ou changeantes&lt;/li&gt;
&lt;li&gt;L'utilisation de threads, les ex√©cutions parall√®les, l'asynchronicit√©&lt;/li&gt;
&lt;li&gt;Les d√©pendances logicielles ou produits tiers non maitris√©s. Exemple : des versions qui peuvent changer d'une ex√©cution √† l'autre&lt;/li&gt;
&lt;li&gt;Les tests via une interface graphique&lt;/li&gt;
&lt;li&gt;La m√©moire utilis√©e et la taille des binaires. Voir l'√©tude de Google &lt;a class="footnote-reference" href="#f3" id="id3"&gt;[3]&lt;/a&gt; √† ce sujet.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="que-faire-pour-eviter-la-flakiness"&gt;
&lt;h2&gt;Que faire pour √©viter la flakiness ?&lt;/h2&gt;
&lt;p&gt;Il y a autant de solutions sp√©cifiques que de causes diff√©rentes mais on peut citer les bonnes pratiques suivantes:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Maitriser la configuration de son environnement √† l'aide de fixtures (setup/teardown des tests)&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Limiter ou ma√Ætriser les d√©pendances.&lt;/dt&gt;
&lt;dd&gt;Solutions : virtualiser les &lt;a class="reference external" href="https://eh-bien-testez-maintenant.github.io/articles/2016/memo-deploiement-denvironnement-de-test-ou-autres.rst"&gt;environnements de test&lt;/a&gt;,
bouchonnner les outils tiers...&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;Utiliser des attentes actives &lt;a class="footnote-reference" href="#f4" id="id4"&gt;[4]&lt;/a&gt; plut√¥t que des attentes incompressibles pour attendre la fin d'une ex√©cution&lt;/li&gt;
&lt;li&gt;Eviter de parall√©liser les ex√©cutions&lt;/li&gt;
&lt;li&gt;Limiter les tests via l'interface graphique ou utiliser l'&lt;em&gt;UI encapsulation&lt;/em&gt; &lt;a class="footnote-reference" href="#f5" id="id5"&gt;[5]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Rejouer automatiquement les tests en √©chec&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusion"&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;La &lt;em&gt;flakiness&lt;/em&gt; est un v√©ritable probl√®me lorsque l'on fait du Test automatique. Il faut en prendre conscience pour ne pas √™tre d√©√ßu
car, oui, cela engendre du &lt;a class="reference external" href="https://eh-bien-testez-maintenant.github.io/articles/2018/test-automatique-lecueil-de-la-maintenance.rst"&gt;travail de maintenance des tests&lt;/a&gt;.
Mais elle permet √©galement, si elle est vraiment prise en compte, de mieux comprendre comment fonctionne le logiciel que l'on teste.&lt;/p&gt;
&lt;p&gt;Enfin, elle permet aussi de relativiser l'importance - quelque fois irraisonnable - que l'on place dans les r√©sulats
des tests automatiques ;-)&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p class="rubric"&gt;Notes&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="f1" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;em&gt;&amp;quot;We define a &amp;quot;flaky&amp;quot; test result as a test that exhibits both a passing and a failing result with the same code.&amp;quot;&lt;/em&gt;
&lt;a class="reference external" href="https://testing.googleblog.com/2016/05/flaky-tests-at-google-and-how-we.html"&gt;https://testing.googleblog.com/2016/05/flaky-tests-at-google-and-how-we.html&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="f2" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id2"&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Voir paragraphe &amp;quot;A war you can‚Äôt win&amp;quot; de cet article : &lt;a class="reference external" href="https://hackernoon.com/flaky-tests-a-war-that-never-ends-9aa32fdef359"&gt;https://hackernoon.com/flaky-tests-a-war-that-never-ends-9aa32fdef359&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="f3" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id3"&gt;[3]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a class="reference external" href="https://testing.googleblog.com/2017/04/where-do-our-flaky-tests-come-from.html"&gt;https://testing.googleblog.com/2017/04/where-do-our-flaky-tests-come-from.html&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="f4" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id4"&gt;[4]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Exemple d'impl√©mentation d'attente active avec Robot Framework, le keyword &lt;cite&gt;Wait Until Keyword Succeeds&lt;/cite&gt; :
&lt;a class="reference external" href="http://robotframework.org/robotframework/latest/libraries/BuiltIn.html#Wait%20Until%20Keyword%20Succeeds"&gt;http://robotframework.org/robotframework/latest/libraries/BuiltIn.html#Wait%20Until%20Keyword%20Succeeds&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="f5" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id5"&gt;[5]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Voir le paragraphe &amp;quot;Follow the Testing Pyramid&amp;quot; de cet article : &lt;a class="reference external" href="https://smartbear.com/resources/ebooks/managing-ui-test-flakiness/"&gt;https://smartbear.com/resources/ebooks/managing-ui-test-flakiness/&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">apallier</dc:creator><pubDate>Sun, 02 Sep 2018 08:30:00 +0200</pubDate><guid isPermaLink="false">tag:eh-bien-testez-maintenant.github.io,2018-09-02:/2018/09/02/test-automatique-flakiness/</guid><category>automatisation</category><category>test logiciel</category></item><item><title>Compilation 2017: Interviews de Testeur Logiciels</title><link>https://eh-bien-testez-maintenant.github.io/2018/02/27/compilation-2017-interviews-de-testeur-logiciels/</link><description>&lt;img alt="Interviews" class="align-center" src="https://eh-bien-testez-maintenant.github.io/images/2018-interviews.jpg" style="width: 200px; height: 111px;" /&gt;
&lt;p&gt;&lt;strong&gt;Compilation 2017&lt;/strong&gt; d'interviews de Testeurs Logiciels qui t√©moignent
de leur m√©tier.
J'ai trouv√© de nombreuses interviews de testeurs en 2017, gr√¢ce
notamment au travail de &lt;a class="reference external" href="https://www.lyontesting.fr/"&gt;Lyon Testing&lt;/a&gt;  et
de &lt;a class="reference external" href="https://latavernedutesteur.fr/"&gt;La Taverne du Testeur&lt;/a&gt;  que je remercie au passage
de partager ces t√©moignages.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;28/12
:&amp;nbsp;&lt;a class="reference external" href="http://www.acpqualife.com/actu/t%C3%A9moignage-emilie-ing%C3%A9nieur-test"&gt;http://www.acpqualife.com/actu/t%C3%A9moignage-emilie-ing%C3%A9nieur-test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;30/11
:&amp;nbsp;&lt;a class="reference external" href="https://latavernedutesteur.fr/2017/11/30/michael-granier-po-et-testeur/"&gt;https://latavernedutesteur.fr/2017/11/30/michael-granier-po-et-testeur/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;23/11
:&amp;nbsp;&lt;a class="reference external" href="https://latavernedutesteur.fr/2017/11/23/benjamin-butel-test-manageur-et-formateur/"&gt;https://latavernedutesteur.fr/2017/11/23/benjamin-butel-test-manageur-et-formateur/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;06/11
:&amp;nbsp;&lt;a class="reference external" href="https://latavernedutesteur.fr/2017/11/16/valentin-guerlesquin-responsable-tests-automatises-et-tests-de-performance/"&gt;https://latavernedutesteur.fr/2017/11/16/valentin-guerlesquin-responsable-tests-automatises-et-tests-de-performance/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;06/11
:&amp;nbsp;&lt;a class="reference external" href="https://latavernedutesteur.fr/2017/11/06/mathieu-pradal-business-developer-it/"&gt;https://latavernedutesteur.fr/2017/11/06/mathieu-pradal-business-developer-it/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;03/11
:&amp;nbsp;&lt;a class="reference external" href="https://latavernedutesteur.fr/2017/11/03/lydie-niveaux-ingenieure-validation-logicielle/"&gt;https://latavernedutesteur.fr/2017/11/03/lydie-niveaux-ingenieure-validation-logicielle/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;03/11
:&amp;nbsp;&lt;a class="reference external" href="https://latavernedutesteur.fr/2017/11/03/marc-hage-chahine-passionne-test-logiciel-interview-1/"&gt;https://latavernedutesteur.fr/2017/11/03/marc-hage-chahine-passionne-test-logiciel-interview-1/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;03/11
:&amp;nbsp;&lt;a class="reference external" href="https://latavernedutesteur.fr/2017/11/03/eric-blanquet-chef-de-projet-test/"&gt;https://latavernedutesteur.fr/2017/11/03/eric-blanquet-chef-de-projet-test/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;07/07
:&amp;nbsp;&lt;a class="reference external" href="https://www.lyontesting.fr/fr/interview-dune-testeuse-3-stephanie-desby/"&gt;https://www.lyontesting.fr/fr/interview-dune-testeuse-3-stephanie-desby/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;19/05
:&amp;nbsp;&lt;a class="reference external" href="https://www.lyontesting.fr/fr/interview-dun-testeur-2-thierry-gerbeau/"&gt;https://www.lyontesting.fr/fr/interview-dun-testeur-2-thierry-gerbeau/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;07/04
:&amp;nbsp;&lt;a class="reference external" href="https://www.lyontesting.fr/fr/interview-dun-testeur-1-julien-blanc/"&gt;https://www.lyontesting.fr/fr/interview-dun-testeur-1-julien-blanc/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Cela nous montre que nous sommes souvent confront√©s aux m√™mes
probl√®mes, heureusement ! ou malheureusement selon le point de vue :-)&lt;/p&gt;
&lt;p&gt;PS : si vous connaissez d'autres interviews de testeurs, n'h√©sitez pas √†
&lt;a class="reference external" href="https://eh-bien-testez-maintenant.github.io/pages/a_propos.rst"&gt;me le faire savoir&lt;/a&gt;.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">apallier</dc:creator><pubDate>Tue, 27 Feb 2018 19:51:00 +0100</pubDate><guid isPermaLink="false">tag:eh-bien-testez-maintenant.github.io,2018-02-27:/2018/02/27/compilation-2017-interviews-de-testeur-logiciels/</guid><category>interviews</category><category>test logiciel</category></item><item><title>Test automatique : l'√©cueil de la maintenance</title><link>https://eh-bien-testez-maintenant.github.io/2018/01/19/test-automatique-lecueil-de-la-maintenance/</link><description>&lt;img alt="Test automatique : l'√©cueil de la maintenance" class="align-center" src="https://eh-bien-testez-maintenant.github.io/images/2018-test-automatique-lecueil-de-la-maintenance.jpg" style="width: 200px; height: 150px;" /&gt;
&lt;p&gt;La confusion n'est pas loin - et le terme est trompeur - entre
&amp;quot;&lt;em&gt;automatiser des tests&lt;/em&gt;&amp;quot; et &amp;quot;&lt;em&gt;tester automatiquement un logiciel&lt;/em&gt;&amp;quot;.
Or il s'agit bien du premier terme dont on parle lorsqu'on
dit &amp;quot;Test automatique&amp;quot;. Cette diff√©rence tenue est pourtant fondamentale
car elle nous dit que les tests ne vont pas vraiment fonctionner tout
seuls. Il va falloir les √©crire et les maintenir au m√™me titre
d'ailleurs que&amp;nbsp; n'importe quel logiciel informatique...&lt;/p&gt;
&lt;div class="section" id="pourquoi"&gt;
&lt;h2&gt;Pourquoi ?&lt;/h2&gt;
&lt;p&gt;Les tests automatiques v√©rifient un logiciel. Ce logiciel est sujet √†
des modifications, si du moins le projet est &amp;quot;vivant&amp;quot;. Ces changements
devront n√©cessairement se r√©percuter dans les tests et/ou dans
l'environnement de test. Or ces changements ont un co√ªt. Ce co√ªt englobe
le temps, les personnes et les comp√©tences qu'il est n√©cessaire de
d√©ployer pour que les tests automatiques fonctionnent tout au long de la
vie du projet.&lt;/p&gt;
&lt;p&gt;Des tests automatiques non maintenus perdent tr√®s vites de leur valeur,
surtout si le logiciel qu'ils testent √©volue vite. On peut m√™me imaginer
arriver √† un point de non retour o√π il n'est plus rentable de les
remettre √† jour. L'investissement dans les tests auto ne sera jamais
rentabilis√©, cr√©ant alors beaucoup de d√©ception.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="mieux-vaut-prevenir"&gt;
&lt;h2&gt;Mieux vaut pr√©venir...&lt;/h2&gt;
&lt;p&gt;La n√©gligence des aspects de maintenance est √† mon avis l'une des
principales causes d'√©chec des projets d'automatisation. Apr√®s avoir
investi dans la mise en place d'un environnement de test, on se rend
compte que cela ne marche pas exactement &amp;quot;tout seul&amp;quot;, il y a toujours
besoin de r√©aliser des ajustements. On est d√©√ßu et on abandonne.&lt;/p&gt;
&lt;p&gt;On r√™verait tous d'un logiciel qui s'auto-teste tout seul (pl√©onasme ?).
En attendant, √† nous testeurs de rappeler aux d√©cideurs que &lt;strong&gt;l'enjeu de
la maintenance est crucial&lt;/strong&gt; afin qu'il n'y ait pas de d√©ception et que
l'on puisse se lancer (ou non d'ailleurs) dans des projets
d'automatisation de tests en &lt;strong&gt;connaissance de cause&lt;/strong&gt;, en sachant sans
feindre de l'ignorer quel est le vrai &amp;quot;prix&amp;quot; de l'automatisation.&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">apallier</dc:creator><pubDate>Fri, 19 Jan 2018 08:28:00 +0100</pubDate><guid isPermaLink="false">tag:eh-bien-testez-maintenant.github.io,2018-01-19:/2018/01/19/test-automatique-lecueil-de-la-maintenance/</guid><category>automatisation</category><category>test logiciel</category></item><item><title>Les environnements de test logiciel</title><link>https://eh-bien-testez-maintenant.github.io/2017/11/01/les-environnements-de-test-logiciel/</link><description>&lt;img alt="Couverture du livre" class="align-center" src="https://eh-bien-testez-maintenant.github.io/images/2017-les-environnements-de-test-logiciel.jpg" style="width: 200px; height: 133px;" /&gt;
&lt;p&gt;Le d√©ploiement d'environnement de test est une activit√© importante du
test logiciel. En effet, il peut devenir un point critique s'il est
complexe √† mettre en place &lt;a class="footnote-reference" href="#f1" id="id1"&gt;[1]&lt;/a&gt;. C'est une lapalissade : &amp;quot;plus le
temps de mise en place d'un environnement de test est long, moins on
testera&amp;quot;. Le temps qui est investi pour mettre en place l'environnement
de test diminue le temps pendant lequel on pourrait faire des tests.&lt;/p&gt;
&lt;blockquote&gt;
&lt;em&gt;&amp;quot;Plus le temps de mise en place d'un environnement de test est long
et difficile, moins on testera et plus la barri√®re psychologique
pour tester sera importante.&amp;quot;&lt;/em&gt;&lt;/blockquote&gt;
&lt;p&gt;Mais l√† n'est pas mon propos. Je voulais parler d'une autre cons√©quence
n√©faste qui est &lt;strong&gt;la barri√®re psychologique&lt;/strong&gt; que repr√©sente l'obstacle
de la mise en route. En effet, si votre environnement de test est
difficile √† mettre en place, vous allez - peut-√™tre m√™me inconsciemment
- vous limiter dans vos tests. C'est un biais simplement humain, nous
pr√©f√©rons les t√¢ches &amp;quot;simples&amp;quot; et courtes aux activit√©s plus complexes.
Surtout que la mise en place d'un environnement de test logiciel n'est
pas non plus l'activit√© la plus &amp;quot;int√©ressante&amp;quot; qui existe :-)&lt;/p&gt;
&lt;p&gt;Je prends deux illustrations tr√®s concr√®tes :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;vous avez mis 1 journ√©e enti√®re pour mettre en place votre
environnement. Vous allez √©viter les cas de tests aux limites qui
viendrait &amp;quot;casser&amp;quot; votre environnement (suppression de fichiers,
arr√™t √©lectrique, corruption de la base de donn√©es...), cas qui
pourtant pourraient s'av√©rer tr√®s int√©ressants d'un point de vue
&amp;quot;test&amp;quot;.&lt;/li&gt;
&lt;li&gt;vous √™tes √† quelques heures d'une livraison et vous n'avez plus aucun
environnement de test &amp;quot;propre&amp;quot; ou &amp;quot;standard&amp;quot;. Vous avez un doute sur
une partie du logiciel mais vous allez pourtant omettre ce petit test
(qui quelque fois vous sauve la mise) avant la livraison car
(consciemment ou inconsciemment) vous avez envisag√© le temps de mise
en place d'un nouvel environnement propre et que ce n'est peut-√™tre
pas le moment d'en perdre avant une livraison importante...&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="diminuer-le-temps-de-mise-en-place"&gt;
&lt;h2&gt;Diminuer le temps de mise en place&lt;/h2&gt;
&lt;p&gt;Il devient donc important de faciliter la phase de mise en place des
environnements de test. Il faut inciter ou du moins ne pas &amp;quot;d√©courager&amp;quot;
les testeurs √† tester en facilitant l'acc√®s √† un environnement pr√™t √†
tester.&lt;/p&gt;
&lt;blockquote&gt;
&lt;em&gt;&amp;quot;Ne pas d√©courager les testeurs √† tester, en facilitant le
d√©ploiement des environnements de test&amp;quot;&lt;/em&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;Comment ?&lt;/em&gt; Plus facile √† dire qu'√† faire ! La mise en place
d'environnement n√©cessite du &lt;strong&gt;mat√©riel&lt;/strong&gt;, des &lt;strong&gt;comp√©tences en
virtualisation&lt;/strong&gt; ou conteneurisation, et des &lt;strong&gt;comp√©tences en
administration syst√®me&lt;/strong&gt;. Si vous d√©veloppez ces comp√©tences, vous aller
pouvoir optimiser votre temps de mise en place d'environnements de test
et globalement augmenter vos capacit√©s de test.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="outils-pour-aller-plus-loin"&gt;
&lt;h2&gt;Outils pour aller plus loin&lt;/h2&gt;
&lt;p&gt;Parmi les outils qui existent pour faciliter la mise en place d'environnement de test, on peut citer :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;les outils de type virtualisation / conteneurisation&lt;/strong&gt; : Docker,
Vagrant et toutes les solutions de virtualisation (Virtual box,
ESXi...)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;les outils de gestion de configuration syst√®me&lt;/strong&gt; : Salt Stack,
Puppet, Ansible, Chef&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;les outils de d√©ploiements&lt;/strong&gt; : &amp;nbsp;Open stack, Cobbler, Foreman (Voir
mon &lt;a class="reference external" href="https://eh-bien-testez-maintenant.github.io/articles/2016/memo-deploiement-denvironnement-de-test-ou-autres.rst"&gt;memo √† ce
sujet&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;table class="docutils footnote" frame="void" id="f1" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;J'ai l'exemple d'une entreprise o√π un environnement de test n√©cessitait plusieurs jours de travail !&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">apallier</dc:creator><pubDate>Wed, 01 Nov 2017 21:37:00 +0100</pubDate><guid isPermaLink="false">tag:eh-bien-testez-maintenant.github.io,2017-11-01:/2017/11/01/les-environnements-de-test-logiciel/</guid><category>environnement de test</category><category>test logiciel</category></item><item><title>Memo : D√©ploiement d'environnement de test (ou autres)</title><link>https://eh-bien-testez-maintenant.github.io/2016/12/17/memo-deploiement-denvironnement-de-test-ou-autres/</link><description>&lt;p&gt;Liens concernant le d√©ploiement d'environnement de test.&lt;/p&gt;
&lt;div class="section" id="cobbler"&gt;
&lt;h2&gt;Cobbler&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://cobbler-doc.readthedocs.io/"&gt;My Cobbler documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.olindata.com/blog/2015/07/cobbler-setup-centos7"&gt;Cobbler Setup on
CentOS7&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.linuxtechi.com/install-and-configure-cobbler-on-centos-7/"&gt;How to Install and Configure Cobbler on CentOS
7.x&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="foreman"&gt;
&lt;h2&gt;Foreman&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.linuxtechi.com/install-and-configure-foreman-on-centos-7-x/"&gt;Steps to Install and Configure Foreman 1.11 on CentOS
7.x&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.linuxtechi.com/bare-metal-provisioning-through-foreman-server/"&gt;Bare metal and Virtual Machine Provisioning through Foreman
Server&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">apallier</dc:creator><pubDate>Sat, 17 Dec 2016 23:07:00 +0100</pubDate><guid isPermaLink="false">tag:eh-bien-testez-maintenant.github.io,2016-12-17:/2016/12/17/memo-deploiement-denvironnement-de-test-ou-autres/</guid><category>environnement de test</category><category>test logiciel</category></item><item><title>Livre : Les tests logiciels fondamentaux</title><link>https://eh-bien-testez-maintenant.github.io/2016/11/03/livre-les-tests-logiciels-fondamentaux/</link><description>&lt;img alt="Couverture du livre" class="align-center" src="https://static.eyrolles.com/img/2/7/4/6/2/3/1/5/9782746231559_h430.jpg" style="width: 213px; height: 320px;" /&gt;
&lt;div class="section" id="avis"&gt;
&lt;h2&gt;Avis&lt;/h2&gt;
&lt;p&gt;Le livre &amp;quot;Les tests logiciels fondamentaux&amp;quot; de l'√©diteur
Herm√®s-Lavoisier est surement le livre de r√©f√©rence en langue fran√ßaise
sur le sujet.&lt;/p&gt;
&lt;p&gt;L'auteur, Bernard Hom√®s, est un sp√©cialiste reconnu du test logiciel en
France. Il est l'ancien pr√©sident du &amp;quot;Comit√© fran√ßais des tests
logiciels&amp;quot;.&lt;/p&gt;
&lt;p&gt;Cet ouvrage est en quelques sortes une somme sur le sujet. Il d√©veloppe
une quantit√© importante de concepts, d'outils et de m√©thodes sur le
test. C'est un livre auquel on peut venir se r√©f√©rer pour avoir des
informations sur des points pr√©cis. Id√©al pour pr√©parer l'examen de la
certification ISTQB, son contenu suit de pr√®s le syllabus de l'ISTQB. A
chaque fin de chapitre, il y a des questions d'examen blanc et un examen
complet √† la fin.&lt;/p&gt;
&lt;p&gt;Un livre de r√©f√©rence, en fran√ßais, qui sera utile pour ceux qui
souhaitent pr√©parer la certification ISTQB.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="eme-de-couverture"&gt;
&lt;h2&gt;4√®me de couverture&lt;/h2&gt;
&lt;p&gt;Le test de logiciel est aujourd'hui une activit√© industrielle r√©gie par
des processus. Ces processus fondamentaux sont d√©crits dans le syllabus
(cahier des charges) de niveau fondation du CFTL-ISTQB 2010 utilis√© pour
la formation des testeurs. Illustr√© par de nombreux exemples, Les tests
logiciels pr√©sente les diff√©rents concepts et analyse les phases
d'ex√©cution des processus. Il permet aux candidats testeurs de pr√©parer
avec succ√®s l'examen de certification. Cet ouvrage apporte √©galement des
solutions aux professionnels du test comme les tests bas√©s sur les
risques (Risk Based Testing), la justification du retour sur
investissement du test ou sa rentabilit√©. Le reporting, les techniques
d'estimation de la charge de test et les standards sont aussi trait√©s,
faisant de cet ouvrage une r√©f√©rence pour les assistants √† ma√Ætrise
d'ouvrage ou √† ma√Ætrise d'≈ìuvre. Il s'adresse aussi aux DSI, aux chefs
de projets, aux d√©veloppeurs voulant am√©liorer leur code et aux testeurs
souhaitant acqu√©rir la certification CFTL.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="sommaire"&gt;
&lt;h2&gt;Sommaire&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Avant-propos&lt;/div&gt;
&lt;div class="line"&gt;Principes fondamentaux&lt;/div&gt;
&lt;div class="line"&gt;Les tests dans le cycle de vie des logiciels&lt;/div&gt;
&lt;div class="line"&gt;Techniques statiques&lt;/div&gt;
&lt;div class="line"&gt;Technique de conception de tests&lt;/div&gt;
&lt;div class="line"&gt;Gestion des tests&lt;/div&gt;
&lt;div class="line"&gt;Outils et automatisation&lt;/div&gt;
&lt;div class="line"&gt;Examen blanc&lt;/div&gt;
&lt;div class="line"&gt;Gabarits et mod√®les&lt;/div&gt;
&lt;div class="line"&gt;Corrig√©s des questions&lt;/div&gt;
&lt;div class="line"&gt;Glossaire&lt;/div&gt;
&lt;div class="line"&gt;Bibliographie&lt;/div&gt;
&lt;div class="line"&gt;Index&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">apallier</dc:creator><pubDate>Thu, 03 Nov 2016 08:19:00 +0100</pubDate><guid isPermaLink="false">tag:eh-bien-testez-maintenant.github.io,2016-11-03:/2016/11/03/livre-les-tests-logiciels-fondamentaux/</guid><category>livre</category><category>test logiciel</category></item><item><title>Livre : Pratique des tests logiciels</title><link>https://eh-bien-testez-maintenant.github.io/2016/10/23/livre-pratique-des-tests-logiciels/</link><description>&lt;img alt="Couverture du livre" class="align-center" src="https://books.google.fr/books/content?id=UWj2yEt78l0C&amp;amp;printsec=frontcover&amp;amp;img=1&amp;amp;zoom=5&amp;amp;edge=curl&amp;amp;imgtk=AFLRE70GJsU-dpETfg7XS-XIp52pCoETKtMS-W2RQ-OXFwWZ7OiNS27uiLOEEduHkwv1I1nh2vGlV_48J1DmVhiA78oF1gbKVAeXj_SwAVHhMu6D_jfHcNjtamZw489s_mEpUD9zGHI9" /&gt;
&lt;div class="section" id="avis"&gt;
&lt;h2&gt;Avis&lt;/h2&gt;
&lt;p&gt;Le livre &amp;quot;Pratique des tests logiciels&amp;quot; de l'√©diteur Dunod (1√®re √©dition) est une bonne entr√©e en mati√®re pour
aborder de fa√ßon concr√®te la probl√©matique du test logiciel.&lt;/p&gt;
&lt;p&gt;Sa lecture se fait de fa√ßon progressive. Les chapitres 1 et 2 d√©crivent
les grands enjeux du test logiciel et s'adressent √† ce titre √† tous ceux
qui font du logiciel, de pr√®s ou de loin (chef de projets, d√©veloppeur,
testeur, voire ma√Ætrise d'ouvrage...). Ensuite, on entre dans le vif du
sujet avec la pr√©sentation de diff√©rentes techniques de tests. Le
dernier chapitre est lui consacr√© √† la gestion des tests et s'adressera
donc aux chefs de projets de test.&lt;/p&gt;
&lt;p&gt;Personnellement, je trouve que le chapitre &amp;quot;Processus et tests
d‚Äôint√©gration&amp;quot; est disproportionn√© par rapport au reste. Cette partie
est tr√®s acad√©mique, on a l'impression de lire une v√©ritable &amp;quot;th√®se&amp;quot; sur
l'int√©gration logicielle.&lt;/p&gt;
&lt;p&gt;Ce livre annonce aussi qu'il permet la pr√©paration de la certification
ISTQB. Il aborde effectivement les principaux points de la certification
(niveau &amp;quot;Fondation&amp;quot; uniquement) mais pas tous. Il ne suffira donc pas et
il viendra plut√¥t en compl√©ment. Remarque : l'√©dition 2 du livre (celle
que je n'ai pas...) semble combler ce manque et propose des chapitres en
plus.&lt;/p&gt;
&lt;p&gt;En r√©sum√©, je conseille vivement la lecture de ce livre, surtout les deux premiers chapitres.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="sommaire"&gt;
&lt;h2&gt;Sommaire&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Chapitre 1 - Quelques id√©es essentielles sur les tests. (10 pages)&lt;/div&gt;
&lt;div class="line"&gt;Chapitre 2 - Tester √† chaque niveau du cycle de vie. (27 pages)&lt;/div&gt;
&lt;div class="line"&gt;Chapitre 3 - Tester efficacement : les diff√©rentes strat√©gies. (18 pages)&lt;/div&gt;
&lt;div class="line"&gt;Chapitre 4 - Concevoir efficacement des jeux de tests gr√¢ce aux sp√©cifications. (31 pages)&lt;/div&gt;
&lt;div class="line"&gt;Chapitre 5 - Utiliser les d√©tails d‚Äôimpl√©mentation dans les tests. (23 pages)&lt;/div&gt;
&lt;div class="line"&gt;Chapitre 6 - Processus et tests d‚Äôint√©gration. (51 pages)&lt;/div&gt;
&lt;div class="line"&gt;Chapitre 7 - G√©rer les tests. (15 pages)&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="eme-de-couverture"&gt;
&lt;h2&gt;4√®me de couverture&lt;/h2&gt;
&lt;p&gt;Ce livre s'adresse aux d√©veloppeurs, concepteurs et int√©grateurs de
logiciels ainsi qu'aux chefs de projets et aux architectes. Il
int√©ressera √©galement les √©l√®ves ing√©nieurs ainsi que les √©tudiants de
fin de licence ou de master en informatique et toute personne pr√©parant
la certification ISTQB du m√©tier de testeur. Concevoir du premier coup
et sans aucune erreur un logiciel qui comporte plusieurs millions de
lignes de code et plusieurs centaines de composants est √©videmment
impossible. La n√©cessit√© des tests au cours des diff√©rentes phases de
conception para√Æt √©vidente et pourtant, dans la pratique, les tests ont
√©t√© longtemps n√©glig√©s et rel√©gu√©s au second rang. On voit cependant
appara√Ætre une forte volont√© de la part de tous les acteurs concern√©s de
faire √©voluer ces pratiques et de remettre au premier plan les tests
logiciels. L'objectif de cet ouvrage est triple : donner les bases et
les bonnes pratiques pour concevoir et mener √† bien les tests
n√©cessaires et efficaces tout au long du cycle de vie du logiciel ;
fournir un r√©f√©rentiel en termes de m√©thodes, de vocabulaire et de
savoir faire ; pr√©parer au passage de la certification ISTQB du m√©tier
de testeur.&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">apallier</dc:creator><pubDate>Sun, 23 Oct 2016 21:05:00 +0200</pubDate><guid isPermaLink="false">tag:eh-bien-testez-maintenant.github.io,2016-10-23:/2016/10/23/livre-pratique-des-tests-logiciels/</guid><category>livre</category><category>test logiciel</category></item><item><title>D√©veloppement logiciel et Gouvernance</title><link>https://eh-bien-testez-maintenant.github.io/2016/10/19/developpement-logiciel-et-gouvernance/</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;quot;Pour qu‚Äôon ne puisse abuser du pouvoir, il faut que, par la
disposition des choses, le pouvoir arr√™te le pouvoir&amp;quot;&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;Montesquieu, &lt;em&gt;De l'esprit des lois&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Cette citation de Montesquieu parle bien s√ªr de politique et de la
s√©paration de ses pouvoirs. Dans cet article, je vais d√©crire une
approche qui me permet de faire rapidement l'audit d'une entreprise sur
sa maturit√© en terme de test logiciel.
Il m'a paru int√©ressant de rapprocher cette citation du domaine du
d√©veloppement logiciel. En essayant de d√©terminer quels sont les jeux de
pouvoir qu'il peut exister au sein d'une entreprise qui d√©veloppe des
produits logiciels, on peut voir appara√Ætre les forces et les lacunes
qui conduisent √† des d√©rives et des biais dans la construction d'un
produit logiciel.&lt;/p&gt;
&lt;div class="section" id="les-pouvoirs-en-presence"&gt;
&lt;h2&gt;Les pouvoirs en pr√©sence&lt;/h2&gt;
&lt;p&gt;Les trois pouvoirs politiques d√©finis par Montesquieu &lt;a class="footnote-reference" href="#f1" id="id1"&gt;[1]&lt;/a&gt; sont&amp;nbsp;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Le pouvoir &lt;strong&gt;l√©gislatif&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Le pouvoir&amp;nbsp;&lt;strong&gt;ex√©cutif&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Le pouvoir &lt;strong&gt;judiciaire&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Maintenant, transposons cette vision dans le domaine de l'industrie
logicielle. On peut d√©finir 3 pouvoirs qui gravitent autour d'un produit
logiciel :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Le pouvoir de&amp;nbsp;&lt;strong&gt;d√©finir&lt;/strong&gt;&amp;nbsp;le produit : l√©gislatif&lt;/li&gt;
&lt;li&gt;Le pouvoir de&amp;nbsp;&lt;strong&gt;construire&lt;/strong&gt; le produit : ex√©cutif&lt;/li&gt;
&lt;li&gt;Le pouvoir de &lt;strong&gt;contr√¥ler&lt;/strong&gt; l'√©tat du&amp;nbsp;produit : judiciaire&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pour illustrer cette notion, on peut par exemple rapprocher ces
&amp;quot;pouvoirs&amp;quot; de diff√©rentes entit√©s qu'il est commun de trouver dans
l'industrie du logiciel :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;La MOA &lt;a class="footnote-reference" href="#f2" id="id2"&gt;[2]&lt;/a&gt;&amp;nbsp;: entit√© charg√©e de d√©finir le produit et de formuler les besoins
des clients et du march√©, qui a le pouvoir de d√©finir&lt;/li&gt;
&lt;li&gt;La MOE &lt;a class="footnote-reference" href="#f3" id="id3"&gt;[3]&lt;/a&gt;&amp;nbsp;: entit√© de d√©veloppement du logiciel, peut √™tre appel√©e aussi &amp;quot;R&amp;amp;D&amp;quot;
ou &amp;quot;√©quipes de d√©veloppement&amp;quot;, qui a le pouvoir de construire&lt;/li&gt;
&lt;li&gt;La QA &lt;a class="footnote-reference" href="#f4" id="id4"&gt;[4]&lt;/a&gt;&amp;nbsp;: entit√© charg√©e de v√©rifier le bon fonctionnement du produit, qui a
le pouvoir de contr√¥ler&amp;nbsp;l'√©tat du&amp;nbsp;produit&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="jeu-de-pouvoir"&gt;
&lt;h2&gt;Jeu de pouvoir&lt;/h2&gt;
&lt;p&gt;L'id√©e consiste maintenant √† √©valuer les √©quilibres entre les pouvoirs
qu'il existe au sein d'une entreprise entre ces entit√©s.&lt;/p&gt;
&lt;p&gt;Il s'agit d'√©valuer pour chacune d'elles, leurs effectifs, leurs r√¥les
hi√©rarchiques, les degr√©s d'ind√©pendance, les processus qui les font
interagir, etc. On pourra alors avoir une id√©e des forces en pr√©sence
afin d'√©valuer s'il n'y a pas une carence ou un exc√®s de tel ou tel
pouvoir.&lt;/p&gt;
&lt;div class="section" id="exemples"&gt;
&lt;h3&gt;Exemples&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Prenons le cas d'une MOA qui d√©finirait uniquement des exigences
m√©tiers ou des exigences fonctionnelles. Elle conduirait la MOE √† ne
s'attacher √† r√©soudre que des probl√©matiques d'ordre fonctionnel et √†
construire un produit qui fonctionne peut-√™tre mais mal car ayant des
lacunes dans le domaine non-fonctionnel (comme la performance,
l'utilisabilit√©, la facilit√© de d√©ploiement, etc).&lt;/li&gt;
&lt;li&gt;Un autre exemple : Prenons le cas d'une soci√©t√© qui aurait une MOE de
100 personnes et une QA de 5 personnes. La&amp;nbsp;responsabilit√©&amp;nbsp;de la&amp;nbsp;QA
√©tant sous celle de la MOE. On voit bien ici le d√©s√©quilibre entre le
pouvoir de construction et le pouvoir de contr√¥le. Le risque ici est
bien de livrer un produit qui est construit de fa√ßon non contr√¥l√©e et
qui ne correspondra pas aux attentes en terme de fonctionnalit√©s et
de qualit√©.&lt;/li&gt;
&lt;li&gt;Un troisi√®me cas, qui de mon point de vue est s√ªrement le plus rare,
la QA est constitu√©e d'une √©quipe importante, ayant un fort degr√©
d'ind√©pendance par rapport √† la MOA et la MOE. Son pouvoir de
contr√¥le et de veto surdimensionn√© pourrait nuire au bon d√©roulement
de la construction. La QA pourrait demander des exigences
qualitatives difficiles √† atteindre et qui ferait augmenter les co√ªts
de d√©veloppement.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusion"&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Cette r√©flexion m'est venue suite √† un audit r√©alis√© dans une entreprise
qui avait des probl√®mes de fiabilit√© sur ses logiciels. Je me suis
aper√ßu que selon la d√©finition des pouvoirs que j'ai √©nonc√© ici,
l'entit√© QA √©tait r√©ellement sous dimensionn√©e. Les personnes d√©di√©es au
Test et √† la Qualit√© repr√©sentent moins de 10% de l'effectif et donc
approximativement du budget, alors que le standard de l'industrie sont
deux √† trois fois sup√©rieurs √† cela depuis plusieurs ann√©es &lt;a class="footnote-reference" href="#f5" id="id5"&gt;[5]&lt;/a&gt;.
Il y avait donc clairement un d√©ficit dans le contre-pouvoir du
contr√¥le de la Qualit√©, expliquant en partie les probl√®mes de fiabilit√©
rencontr√©s par cette entreprise.&lt;/p&gt;
&lt;p&gt;J'esp√®re que ce petit outil permettra √† d'autres d'√©valuer les lacunes
et les forces en pr√©sence dans une entreprise ou une √©quipe de
d√©veloppement. C'est un exercice que j'ai trouv√© int√©ressant √† faire et
qui m'a permis de mieux comprendre le contexte d'une entreprise.&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="100%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://eh-bien-testez-maintenant.github.io/images/2016-SketchnoteD√©veloppementLogicielEtGouvernance.jpg"&gt;&lt;img alt="image0" src="https://eh-bien-testez-maintenant.github.io/images/2016-SketchnoteD√©veloppementLogicielEtGouvernance.jpg" style="width: 640px; height: 414px;" /&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Sketchnote &amp;quot;D√©veloppement logiciel et Gouvernance&amp;quot;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr class="docutils" /&gt;
&lt;p class="rubric"&gt;Notes&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="f1" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a class="reference external" href="https://fr.wikipedia.org/wiki/S%C3%A9paration_des_pouvoirs#Montesquieu_:_reprise_de_la_philosophie_de_Locke"&gt;https://fr.wikipedia.org/wiki/S%C3%A9paration_des_pouvoirs#Montesquieu_:_reprise_de_la_philosophie_de_Locke&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="f2" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id2"&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;MOA = Ma√Ætrise d'ouvrage&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="f3" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id3"&gt;[3]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;MOE = Ma√Ætrise d'oeuvre&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="f4" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id4"&gt;[4]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;QA = Quality Assurance ou Assurance Qualit√©&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="f5" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id5"&gt;[5]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Voir √† ce sujet le &amp;quot;World Quality Report 2015-16&amp;quot; : en 2015, en moyenne 35% du budget IT est allou√© √† la Qualit√© et au Test : www.world-quality-report.com&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">apallier</dc:creator><pubDate>Wed, 19 Oct 2016 20:51:00 +0200</pubDate><guid isPermaLink="false">tag:eh-bien-testez-maintenant.github.io,2016-10-19:/2016/10/19/developpement-logiciel-et-gouvernance/</guid><category>gouvernance</category><category>test logiciel</category></item></channel></rss>